#!/usr/bin/env bash

set -E

DIRS="after/ftdetect after/ftplugin after/indent after/syntax autoload compiler ftdetect ftplugin indent plugin syntax"
DIRS_BASIC="after/ftdetect after/indent after/syntax ftdetect indent syntax"

TMPFOLDER="./tmp"
BACKFOLDER="_oldpacks_backup"
GITSOURCE="https://github.com"

function cleanup_and_exit() {
    # remove temp folder
    [[ -d "$TMPFOLDER" ]] && rm -rf "$TMPFOLDER"
    echo -e "$1"
    exit $2
}

download() {
    for pack in $1; do
        path="$(printf "$pack" | cut -d ':' -f 2 | cut -d '#' -f 1)"
        dir="${TMPFOLDER}/$(printf "$path" | cut -d '/' -f 2)"
        [[ $(grep '#' <<< $pack) ]] \
            && branch="$(printf "$pack" | cut -d '#' -f 2)" || branch="master"
        rm -rf "$dir"
        while [ ! -d "$dir" ]; do
            git clone -b "$branch" -q --recursive "${GITSOURCE}/${path}.git" "$dir" && printf '.'
        done
    done
    wait
}

extract() {
    printf "\n"
    for pack in $1; do
        name="$(printf "$pack" | cut -d ':' -f 1 | cut -d '#' -f 1)"
        path="$(printf "$pack" | cut -d ':' -f 2 | cut -d '#' -f 1)"
        dir="${TMPFOLDER}/$(printf "$path" | cut -d '/' -f 2)"
        [[ $(grep '#' <<< $pack) ]] && branch="$(printf "$pack" | cut -d '#' -f 2)" || branch="master"
        directories="DIRS$(printf "$pack" | cut -d ':' -f 3 | cut -d '#' -f 1)"
        printf -- "- [${name}](${GITSOURCE}/${path}#branch=${branch}) ("

        subdirs=""
        for subdir in ${!directories}; do
            if [ -d "$dir/$subdir" ]; then
                base="$(basename "$subdir")"
                [[ "$subdirs" != *"$base"* ]] && subdirs="$subdirs, $base"
                copy_dir "$dir" "$subdir"
            fi
        done

        printf "${subdirs##, })\n"
    done
}

copy_dir() {
    for file in $(find "${1}/${2}" -name '*.vim'); do
        file_path="$(dirname "${file##$1/}")"
        mkdir -p "$file_path"
        touch "${file_path}/$(basename "$file")"
        cat $file >> ${file_path}/$(basename "$file")
    done
}

concat_ftdetect() {
    cat ftdetect/* | grep -E '^[^"]' > ${TMPFOLDER}/polyglot.vim
    rm -f ftdetect/*
    mv ${TMPFOLDER}/polyglot.vim ftdetect/
}

backup() {
    BACKUPDIRS="after autoload compiler ftdetect ftplugin indent plugin syntax"

    [[ -d "$BACKFOLDER" ]] \
        && cleanup_and_exit "Error, backup directory already exists: ${BACKFOLDER}" 1
    install -d "$BACKFOLDER"
    printf "Backing up current packs to: ${BACKFOLDER}\n"
    for subdir in $BACKUPDIRS; do
        [[ -d $subdir ]] \
            && mv "$subdir" "${BACKFOLDER}/${subdir}" \
            || printf "Error, could not backup missing directory: ${subdir}\n"
    done
}

PACKS="
    archversion:prurigro/vim-archversion
    arduino:sudar/vim-arduino-syntax
    blade:xsbeats/vim-blade
    aspnet:vim-scripts/aspnet.vim--Abshire
    c++11:octol/vim-cpp-enhanced-highlight
    c/c++:vim-jp/cpp-vim
    c-extensions:kergoth/aftersyntaxc.vim
    clojure:guns/vim-clojure-static
    coffee-script:kchmck/vim-coffee-script
    coloresque:prurigro/vim-coloresque
    css:JulesWang/css.vim
    csv:chrisbra/csv.vim
    cucumber:tpope/vim-cucumber
    cython:tshirtman/vim-cython
    dockerfile:honza/dockerfile.vim
    elixir:elixir-lang/vim-elixir
    emberscript:heartsentwined/vim-ember-script
    emblem:heartsentwined/vim-emblem
    erlang:oscarh/vimerl
    git:tpope/vim-git
    go:fatih/vim-go:_BASIC
    haml:tpope/vim-haml
    handlebars:mustache/vim-mustache-handlebars
    haskell:travitch/hasksyn
    haxe:yaymukund/vim-haxe
    html5:othree/html5.vim
    jade:digitaltoad/vim-jade
    jasmine:glanotte/vim-jasmine
    javascript:pangloss/vim-javascript
    jquery:phongnh/vim-jquery
    json:elzr/vim-json
    jst:briancollins/vim-jst
    latex:LaTeX-Box-Team/LaTeX-Box
    less:groenewege/vim-less
    liquid:tpope/vim-liquid
    markdown:plasticboy/vim-markdown:_BASIC
    nginx:mutewinter/nginx.vim
    nim:zah/nimrod.vim
    ocaml:jrk/vim-ocaml
    octave:vim-scripts/octave.vim--
    opencl:petRUShka/vim-opencl
    perl:vim-perl/vim-perl
    php:StanAngeloff/php.vim
    puppet:rodjek/vim-puppet
    protobuf:uarun/vim-protobuf
    python:mitsuhiko/vim-python-combined
    r-lang:jcfaria/Vim-R-plugin
    rspec:sheerun/rspec.vim
    ruby:vim-ruby/vim-ruby
    rust:wting/rust.vim
    sbt:derekwyatt/vim-sbt
    scala:derekwyatt/vim-scala
    slim:slim-template/vim-slim
    stylus:wavded/vim-stylus
    svg:vim-scripts/svg.vim
    swift:toyamarinyon/vim-swift
    systemd:kurayama/systemd-vim-syntax
    textile:timcharper/textile.vim
    tmux:tejr/vim-tmux
    tomdoc:duwanis/tomdoc.vim
    toml:cespare/vim-toml
    typescript:leafgarland/typescript-vim
    vala:tkztmk/vim-vala
    vbnet:vim-scripts/vbnet.vim
    vm:lepture/vim-velocity
    twig:beyondwords/vim-twig
    xls:vim-scripts/XSLT-syntax
    yard:sheerun/vim-yardoc
"

# backup current setup
backup

# setup fresh temp folder
rm -rf "$TMPFOLDER"
mkdir "$TMPFOLDER"

# download/setup latest packs
printf "Downloading packs..."
download "$PACKS"
extract "$PACKS"
concat_ftdetect

cleanup_and_exit '\nDone!' 0
